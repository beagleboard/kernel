From f241d00112333aabd1cc0df818332384971a66d6 Mon Sep 17 00:00:00 2001
From: Pantelis Antoniou <panto@antoniou-consulting.com>
Date: Mon, 22 Apr 2013 17:05:53 +0300
Subject: [PATCH 08/11] omap_hsmmc: Bail out when rstctl error is unrecoverable

Make sure that when a rstctl resource is requested, but unavailable
to fail the device probe.

Signed-off-by: Pantelis Antoniou <panto@antoniou-consulting.com>
---
 drivers/mmc/host/omap_hsmmc.c | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/drivers/mmc/host/omap_hsmmc.c b/drivers/mmc/host/omap_hsmmc.c
index f6f5875..e2b97df 100644
--- a/drivers/mmc/host/omap_hsmmc.c
+++ b/drivers/mmc/host/omap_hsmmc.c
@@ -1837,11 +1837,15 @@ static int omap_hsmmc_probe(struct platform_device *pdev)
 	/* request reset control (bail if deffering) */
 	rctrl = rstctl_get(&pdev->dev, NULL);
 	if (IS_ERR(rctrl)) {
-		if (PTR_ERR(rctrl) == -EPROBE_DEFER) {
-			dev_info(&pdev->dev, "Loading deferred\n");
+		ret = PTR_ERR(rctrl);
+		if (ret == -EPROBE_DEFER)
 			return -EPROBE_DEFER;
+
+		if (ret != -ENODEV && ret != -ENOENT) {
+			dev_err(&pdev->dev, "Unrecoverable rstctl error\n");
+			return PTR_ERR(rctrl);
 		}
-		dev_info(&pdev->dev, "Failed to get rstctl\n");
+		dev_warn(&pdev->dev, "Failed to get rstctl; not using any\n");
 		rctrl = NULL;
 	} else {
 		dev_info(&pdev->dev, "Got rstctl (%s:#%d name %s) label:%s\n",
-- 
1.8.1.4


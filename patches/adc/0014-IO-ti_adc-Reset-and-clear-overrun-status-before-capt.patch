From cbb646469711967af0b4443741e0dd28d549c643 Mon Sep 17 00:00:00 2001
From: Zubair Lutfullah <zubair.lutfullah@gmail.com>
Date: Fri, 12 Jul 2013 00:01:41 +0100
Subject: [PATCH 14/22] IO: ti_adc: Reset and clear overrun status before
 capture.

While not pulling out samples, the FIFO will fill up causing an

overrun event. Before starting up another continuous sample, clear that

event.

Signed-off-by: Russ Dill <Russ.Dill@ti.com>
---
 drivers/iio/adc/ti_am335x_adc.c |   24 +++++++++++++++---------
 1 file changed, 15 insertions(+), 9 deletions(-)

diff --git a/drivers/iio/adc/ti_am335x_adc.c b/drivers/iio/adc/ti_am335x_adc.c
index 1e48799..eb47385 100644
--- a/drivers/iio/adc/ti_am335x_adc.c
+++ b/drivers/iio/adc/ti_am335x_adc.c
@@ -250,22 +250,28 @@ static int tiadc_buffer_postenable(struct iio_dev *idev)
 {
         struct tiadc_device *adc_dev = iio_priv(idev);
         struct iio_buffer *buffer = idev->buffer;
-        unsigned int enb, fifo1count;
-        int stepnum, i;
+        unsigned int enb, config;
+        int stepnum;
         u8 bit;
 
         if (!adc_dev->is_continuous_mode) {
                 printk("Data cannot be read continuously in one shot mode\n");
                 return -EINVAL;
         } else {
-                tiadc_writel(adc_dev, REG_IRQENABLE,
-                                (IRQENB_FIFO1THRES |
-                                 IRQENB_FIFO1OVRRUN |
-                                 IRQENB_FIFO1UNDRFLW));
 
-                fifo1count = tiadc_readl(adc_dev, REG_FIFO1CNT);
-                for (i = 0; i < fifo1count; i++)
-                        tiadc_readl(adc_dev, REG_FIFO1);
+                config = tiadc_readl(adc_dev, REG_CTRL);
+                tiadc_writel(adc_dev, REG_CTRL,
+                                        config & ~CNTRLREG_TSCSSENB);
+                tiadc_writel(adc_dev, REG_CTRL,
+                                        config |  CNTRLREG_TSCSSENB);
+
+                tiadc_writel(adc_dev,  REG_IRQSTATUS,
+                                 IRQENB_FIFO1THRES |
+                                 IRQENB_FIFO1OVRRUN |
+                                 IRQENB_FIFO1UNDRFLW);
+                tiadc_writel(adc_dev,  REG_IRQENABLE,
+                                 IRQENB_FIFO1THRES |
+                                 IRQENB_FIFO1OVRRUN);
 
                 tiadc_writel(adc_dev, REG_SE, 0x00);
                 for_each_set_bit(bit, buffer->scan_mask,
-- 
1.7.9.5


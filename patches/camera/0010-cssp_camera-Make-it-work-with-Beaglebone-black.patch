From dca00eef9277dc218920e98f8b34abc5b538f633 Mon Sep 17 00:00:00 2001
From: Pantelis Antoniou <panto@antoniou-consulting.com>
Date: Fri, 10 May 2013 14:07:49 +0300
Subject: [PATCH 10/10] cssp_camera: Make it work with Beaglebone black

Using the reset control framework, the camera works on the black.
I love it when a plan comes together...
---
 drivers/media/platform/soc_camera/cssp_camera.c | 25 +++++++++++++++++++++++--
 firmware/capes/BB-BONE-CAM3-01-00A2.dts         |  5 +++++
 2 files changed, 28 insertions(+), 2 deletions(-)

diff --git a/drivers/media/platform/soc_camera/cssp_camera.c b/drivers/media/platform/soc_camera/cssp_camera.c
index 7c8d40e..119c432 100644
--- a/drivers/media/platform/soc_camera/cssp_camera.c
+++ b/drivers/media/platform/soc_camera/cssp_camera.c
@@ -45,6 +45,8 @@
 #include <linux/of_gpio.h>
 #include <linux/of_i2c.h>
 
+#include <linux/rstctl.h>
+
 static unsigned video_nr = -1;
 module_param(video_nr, uint, 0644);
 MODULE_PARM_DESC(video_nr, "videoX start number, -1 is autodetect");
@@ -181,6 +183,8 @@ struct cssp_cam_dev {
 
 	/* OF build platform data here */
 	struct cssp_cam_platform_data_storage *pstore;
+
+	struct rstctl *rctrl;
 };
 
 /*
@@ -802,7 +806,6 @@ static int buffer_prepare(struct vb2_buffer *vb)
 
 static int buffer_finish(struct vb2_buffer *vb)
 {
-	struct cssp_cam_dev *dev = vb2_get_drv_priv(vb->vb2_queue);
 	return 0;
 }
 
@@ -1126,7 +1129,6 @@ static int vidioc_qbuf(struct file *file, void *priv, struct v4l2_buffer *p)
 static int vidioc_dqbuf(struct file *file, void *priv, struct v4l2_buffer *p)
 {
 	struct cssp_cam_dev *dev = video_drvdata(file);
-	u16 val;
 
 	return vb2_dqbuf(&dev->vb_vidq, p, file->f_flags & O_NONBLOCK);
 }
@@ -1634,6 +1636,21 @@ static int cssp_cam_probe(struct platform_device *pdev)
 	struct cssp_cam_platform_data *pdata;
 	struct pinctrl *pinctrl;
 	int ret = 0, use_of_pdata = 0;
+	struct rstctl *rctrl;
+
+	rctrl = rstctl_get(&pdev->dev, NULL);
+	if (IS_ERR(rctrl)) {
+		dev_info(&pdev->dev, "Failed to get rstctl; nevermind\n");
+		rctrl = NULL;
+	} else {
+		dev_info(&pdev->dev, "Got rstctl (%s:#%d name %s) label:%s\n",
+				rctrl->rdev->rdesc->name,
+				rctrl->line - rctrl->rdev->rdesc->lines,
+				rctrl->line->name, rctrl->label);
+
+		/* always assert to keep the emmc at reset */
+		rstctl_assert(rctrl);
+	}
 
 	pinctrl = devm_pinctrl_get_select_default(&pdev->dev);
 	if (IS_ERR(pinctrl))
@@ -1670,6 +1687,8 @@ static int cssp_cam_probe(struct platform_device *pdev)
 	cam_dev->pdev = pdev;
 	platform_set_drvdata(pdev, cam_dev);
 
+	cam_dev->rctrl = rctrl;
+
 	cam_dev->camera_board_info = pdata->cam_i2c_board_info;
 
 	cam_dev->camera_clk = clk_get(&pdev->dev, pdata->cam_clk_name);
@@ -1780,6 +1799,8 @@ static int cssp_cam_remove(struct platform_device *pdev)
 
 	clk_put(cam->camera_clk);
 
+	rstctl_put(cam->rctrl);
+
 	kfree(cam);
 
 	dev_info(&pdev->dev, "removed\n");
diff --git a/firmware/capes/BB-BONE-CAM3-01-00A2.dts b/firmware/capes/BB-BONE-CAM3-01-00A2.dts
index 97bdcfd..e546f08 100644
--- a/firmware/capes/BB-BONE-CAM3-01-00A2.dts
+++ b/firmware/capes/BB-BONE-CAM3-01-00A2.dts
@@ -158,6 +158,10 @@
 				/* orientation; -> MT9T112_FLAG_VFLIP */
 				orientation-gpio = <&gpio1 30 0>;
 
+				/* reset controller (for the black) */
+				reset = <&rstctl 0 0>;
+				reset-names = "eMMC_RSTn-CAM3";
+
 				/* camera sensor */
 				cssp,sensor {
 					i2c-adapter = <&i2c2>;
@@ -176,6 +180,7 @@
 						pll-divider = <24 1 0 7 0 10 14 7 0>;
 					};
 				};
+
 			};
 
 		};
-- 
1.8.1.4

